/*
 */
package adproccw;

import javax.swing.JOptionPane;
import javax.swing.JDialog;
import javax.swing.*;
import java.util.ArrayList;
// for the image
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
import java.io.File;
/**
 *
 * @author Compaq
 */
public class PipeUI extends javax.swing.JFrame {

    
    private  ArrayList<Pipe> lstOrderedPipes = new ArrayList<Pipe>(); 
    private double total, cost, newLength, newRadius;
    private int newGrade, type, colour, quantity;  
    private  boolean insulation, reinforcement, chemicalResist;
    private Pipe aPipe;
    /**
     * Creates new form PipeUI
     */
    public PipeUI() {
        
        initComponents();
        groupRadioButtons();
        
        }
    

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnOrder = new javax.swing.JButton();
        txtLength = new javax.swing.JTextField();
        txtRad = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblCost = new javax.swing.JLabel();
        lstOrder = new java.awt.List();
        jLabel5 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        cbxInsulation = new javax.swing.JCheckBox();
        cbxReinforce = new javax.swing.JCheckBox();
        cbxResistant = new javax.swing.JCheckBox();
        BtnNew = new javax.swing.JButton();
        cmbGrade = new javax.swing.JComboBox();
        rdbTwo = new javax.swing.JRadioButton();
        rdbOne = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        rdbNone = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();
        txtQuantity = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        BtnEdit = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        BtnTables = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnOrder.setText("Get Price");
        btnOrder.setName("btnOrder"); // NOI18N
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        txtLength.setName("txtLength"); // NOI18N

        txtRad.setName("txtRad"); // NOI18N

        jLabel1.setText("Plastic Grade:");

        jLabel2.setText("Length (m):");

        jLabel3.setText("Radius (Inch)");

        jLabel4.setText("Cost: £");

        lblCost.setText("0000.00");
        lblCost.setName("lblCost"); // NOI18N

        jLabel5.setText("Total: £");

        lblTotal.setText("0000.00");
        lblTotal.setName("lblCost"); // NOI18N

        cbxInsulation.setText("Insulation");

        cbxReinforce.setText("Reinforcement");

        cbxResistant.setText("ChemicalResist");

        BtnNew.setText("New Order");
        BtnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnNewActionPerformed(evt);
            }
        });

        cmbGrade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));

        rdbTwo.setText("Two");

        rdbOne.setText("One");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel6.setText("Pipes'Я’us");

        rdbNone.setSelected(true);
        rdbNone.setText("None");

        jLabel7.setText("Colours:");

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        jLabel8.setText("Quantity:");

        BtnEdit.setText("Edit");
        BtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditActionPerformed(evt);
            }
        });

        jLabel9.setText("“PipesR’us” is a company producing a variety of pipes for water, drainage, fuel, gas, conduit, plumbing and heating.");

        BtnTables.setText("View Charts");
        BtnTables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTablesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lstOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel9))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(BtnTables)
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbxResistant)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(20, 20, 20)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtRad, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(cbxInsulation)
                                    .addComponent(cbxReinforce)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rdbNone)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rdbOne)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rdbTwo)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(200, 200, 200)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblCost))
                                            .addComponent(btnOrder, javax.swing.GroupLayout.Alignment.TRAILING)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(BtnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRemove)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtnEdit)
                                .addGap(163, 163, 163)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTotal)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(372, 372, 372)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cmbGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdbOne)
                            .addComponent(rdbTwo)
                            .addComponent(rdbNone)))
                    .addComponent(BtnTables))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(cbxInsulation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxReinforce)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxResistant)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCost)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(lstOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblTotal)
                    .addComponent(BtnNew)
                    .addComponent(btnRemove)
                    .addComponent(BtnEdit))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
     
    try {
      	
        getInputs();
          
        validateInput(); // empty
        
        //needs to be added as a method
      	PipeChecker cPipe = new PipeChecker();
      	type = cPipe.check(newGrade, colour, insulation, reinforcement);

        //initialize the type pipe  
      	initPipe(type);

      	cost = aPipe.getPrice(); // need to round

      	cost = 10 * quantity; //Hard coded 10 for testing 

      	//sets lable.... needed? *********************************************************************************************
      	lblCost.setText(String.valueOf(cost));

      	//Yes or no option message box asked if theyd like to add to order
      	JDialog.setDefaultLookAndFeelDecorated(true);
      	int response = JOptionPane.showConfirmDialog(null, "You require a type " + type + ". This pipe costs £" + cost +
      		". Would you like to add to order?", "Add to order",
      	JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

      	if (response == JOptionPane.YES_OPTION) {

      	    addToOrder();

      	}


      } catch (Exception exRef) {
      	//catch block, or exception handler 
      	JOptionPane.showMessageDialog(null, exRef);
      }
    
    }//GEN-LAST:event_btnOrderActionPerformed

    private void BtnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnNewActionPerformed
        
        //clears inputs
        clearText();
        
        //empties lists
        lstOrder.removeAll(); 
        lstOrderedPipes.clear();
         
        //clears lables
        lblCost.setText("");
        lblTotal.setText("");
       
    }//GEN-LAST:event_BtnNewActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        
        //gets se;ected item
        int index = lstOrder.getSelectedIndex();
        
        // if an item is slected remove it 
        if(validSelected() == true)
        {
        lstOrder.remove(index);
        
        lstOrderedPipes.remove(index);
        
        updateTotal();
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void BtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditActionPerformed
                
        int index = lstOrder.getSelectedIndex();
        
        if(validSelected() == true)
        {
        Pipe xPipe = lstOrderedPipes.get(index);
        
        System.out.println(xPipe.getPipeLength());
        
        txtLength.setText(Double.toString(xPipe.getPipeLength()));
        txtRad.setText(Double.toString(xPipe.getPipeRadius()));
        
        //getPipeGrade()
        
        if (xPipe.getPipeColours()==0)
        {
        rdbNone.setSelected(true);
        }else if (xPipe.getPipeColours()==1)
        {
        rdbOne.setSelected(true);
        }
        else
        {
        rdbTwo.setSelected(true);
        }
        
    cbxInsulation.setSelected(xPipe.isPipeInsulation());
    cbxReinforce.setSelected(xPipe.isPipeReinforcement());
    cbxResistant.setSelected(xPipe.isPipeChemicalRes());
        
    btnRemove.doClick();
        
        
        //quantity = Integer.parseInt(txtQuantity.getText()); 
        
        }   
        
    }//GEN-LAST:event_BtnEditActionPerformed

    private void BtnTablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTablesActionPerformed
       
         try{
         BufferedImage myPicture = ImageIO.read(new File("JavaCW-Tables.png"));
         ImageIcon icon = new ImageIcon(myPicture);
         JLabel label = new JLabel(icon);
         JOptionPane.showMessageDialog(null, label);
        
        } catch (Exception exRef) {
      	//catch block, or exception handler 
      	JOptionPane.showMessageDialog(null, exRef);
      }
        
    }//GEN-LAST:event_BtnTablesActionPerformed

    private void clearText()
    {
        //cmbGrade.setSelectedItem(1);  
        txtLength.setText(""); 
        txtRad.setText("");
        txtQuantity.setText("");
        
        //unticks boxes
        cbxInsulation.setSelected(false);
        cbxReinforce.setSelected(false);
        cbxResistant.setSelected(false);
        
        //sets defualt radio button 
        rdbNone.setSelected(true);
    }
    
    private void updateTotal()
    {
        total = 0;
        
        //for each pipe in list add the price 
        for(Pipe aPipe:  lstOrderedPipes)
        { 
           total += 10; //aPipe.getPrice(); // Fixed to 10 for test
        }
 
        //updates lable
        lblTotal.setText(String.valueOf(total));
    }
    
    private void getInputs()
    {
    
     //convert to correct type from string
        newGrade = 1; //(Integer) cmbGrade.getSelectedItem(); 
        
        newRadius = Double.parseDouble(txtRad.getText()); 
        newLength = Double.parseDouble(txtLength.getText()); 
        
        if (rdbNone.isSelected())
        { colour = 0;
        
        }else if (rdbOne.isSelected())
        {
        colour = 1;
        }
        else
        {
        colour = 2;
        }
        
        //get check box values
        insulation = cbxInsulation.isSelected();
        reinforcement = cbxReinforce.isSelected();
        chemicalResist = cbxResistant.isSelected();
        
        quantity = Integer.parseInt(txtQuantity.getText()); 
        
    }
    
    private void validateInput()
    {
        //add validation here
        
    }
    
    private void addToOrder()
    {
    lstOrderedPipes.add(aPipe);
        
        updateTotal();
       
        String lstEntry;
        // list item
        lstEntry = ("Pipe grade: " + newGrade + " Radius: " + newRadius +
                " Lenght: " + newLength + " Cost: £" + cost + " x (" + quantity + ")");
        
        lstOrder.add(lstEntry); // adds to list
        
        clearText();
    }
    
    private void initPipe(int type)
    {
    switch (type) {
            case 0:  
                    aPipe =  new Pipe1(newLength, newRadius, newGrade, chemicalResist);
                     break;
                    //JOptionPane.showMessageDialog(null, "Pipe not supplied");
                    //return;
            case 1:   aPipe =  new Pipe1(newLength, newRadius, newGrade, chemicalResist);
                     break;
            case 2:   aPipe = new Pipe2(newLength, newRadius, newGrade, chemicalResist);
                     break;
            case 3:   aPipe = new Pipe3(newLength, newRadius, newGrade, chemicalResist);
                     break;
            case 4:   aPipe = new Pipe4(newLength, newRadius, newGrade, chemicalResist);
                     break;
            case 5:   aPipe = new Pipe5(newLength, newRadius, newGrade, chemicalResist);
                     break;
        }
    
    }
    
    private boolean validSelected()
    {
     boolean valid = false;
     int index = lstOrder.getSelectedIndex();
     if(index != -1)
        {
           valid = true;
      }else if(lstOrderedPipes.isEmpty())
      {
      msg("You have no items in the list");
      } else {
      msg("Please select an item");
      }
     
     return valid;
    }
    
    private void groupRadioButtons()
    {
    ButtonGroup group = new ButtonGroup();
    group.add(rdbNone);
    group.add(rdbOne);
    group.add(rdbTwo);
    }
    
    private void msg(String s)
    {
    JOptionPane.showMessageDialog(null, s);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PipeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PipeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PipeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PipeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PipeUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnEdit;
    private javax.swing.JButton BtnNew;
    private javax.swing.JButton BtnTables;
    private javax.swing.JButton btnOrder;
    private javax.swing.JButton btnRemove;
    private javax.swing.JCheckBox cbxInsulation;
    private javax.swing.JCheckBox cbxReinforce;
    private javax.swing.JCheckBox cbxResistant;
    private javax.swing.JComboBox cmbGrade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblCost;
    private javax.swing.JLabel lblTotal;
    private java.awt.List lstOrder;
    private javax.swing.JRadioButton rdbNone;
    private javax.swing.JRadioButton rdbOne;
    private javax.swing.JRadioButton rdbTwo;
    private javax.swing.JTextField txtLength;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtRad;
    // End of variables declaration//GEN-END:variables

}
